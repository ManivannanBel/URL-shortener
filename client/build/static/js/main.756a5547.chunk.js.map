{"version":3,"sources":["actions/types.js","actions/clearStateAction.js","component/LandingPage.jsx","actions/urlActions.js","utils/setAuthToken.js","actions/securityActions.js","component/Header.jsx","component/Signin.jsx","component/Register.jsx","component/UrlDetailComponent.jsx","component/Dashboard.jsx","component/UserManagement.jsx","actions/profileActions.js","component/Footer.jsx","reducers/errorReducer.js","reducers/urlReducer.js","reducers/profileReducer.js","reducers/messageReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","utils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","clearErrors","dispatch","type","payload","clearMessages","clearShortUrl","LandingPage","props","onChange","event","setState","target","name","value","onSubmit","preventDefault","shortenAnonymousUser","url","state","onCopy","navigator","clipboard","writeText","shortUrl","current","errors","message","React","createRef","this","auth","isAuthenticated","history","push","nextProps","urlData","Fragment","Container","error","className","role","success","Form","FormGroup","controlId","FormLabel","FormControl","placeholder","Text","Button","Row","Col","md","span","offset","Label","ref","disabled","onClick","icon","faCopy","Table","striped","bordered","hover","faBan","faCheck","Component","connect","axios","post","then","res","console","log","data","catch","err","response","setAuthToken","token","defaults","headers","common","setCurrentUser","decoded","logout","localStorage","removeItem","Header","onLogoutClick","user","authLinks","Nav","to","faUserCircle","username","guestLinks","Navbar","collapseOnSelect","expand","variant","Brand","Toggle","aria-controls","Collapse","id","Signin","userCreds","email","password","loginUser","Group","Control","classnames","loginCreds","a","setItem","jwt_decode","Register","newUser","confirmPassword","createUser","UrlDetailComponent","handleClose","show","handleShow","handleDelete","original_url","deleteUrl","shortened_url","no_of_redirections","creation_time","expiration_time","Card","border","Body","sm","faEdit","Modal","onHide","centered","closeButton","Title","fluid","as","defaultValue","Date","Footer","window","confirm","method","status","location","href","Dashboard","shortenUrl","getUrlList","urls","urlList","Accordion","Link","eventKey","shortUrls","filter","is_api","length","map","key","_id","shortenedUrlsList","apiUrls","apiUrlsList","updateList","get","UserManagement","modalValue","changePassword","modalText","modalInputName","passwordToChange","usernameToChange","emailToChange","text","enableApi","enableAPIService","updateDetail","inputType","newUsername","updateUsername","newEmail","updateEmail","newPassword","updatePassword","apilink","noOfLinksShortened","noOfActiveLinks","noOfLinksCreatedWithAPI","totalNumberOfRedirections","hasApi","apiKey","getUserProfileDetails","Object","userDetails","put","initialState","isEmpty","undefined","keys","trim","combineReducers","action","actions","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","component","otherProps","render","jwtToken","currentTime","now","exp","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.756a5547.chunk.js","sourcesContent":["//errors\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\n//Security\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n//URL\r\nexport const GET_SHORT_URL = \"GET_SHORT_URL\";\r\nexport const DELETE_SHORT_URL = \"DELETE_SHORT_URL\";\r\nexport const GET_URLS_LIST = \"GET_URLS_LIST\";\r\nexport const CLEAR_SHORT_URL = \"CLEAR_SHORT_URL\";\r\nexport const ADD_TO_URL_LIST = \"ADD_TO_URL_LIST\";\r\n\r\n//User details\r\nexport const GET_USER_DETAILS = \"GET_USER_DETAILS\";\r\nexport const GET_USERNAME = \"GET_USERNAME\";\r\nexport const GET_EMAIL = \"GET_EMAIL\";\r\nexport const GET_API_STATUS = \"GET_API_STATUS\";\r\n","import { CLEAR_ERRORS, CLEAR_MESSAGE, CLEAR_SHORT_URL } from \"./types\"\r\n\r\nexport const clearErrors = () => dispatch => {\r\n    dispatch({\r\n        type : CLEAR_ERRORS,\r\n        payload : {}\r\n    })\r\n}\r\n\r\nexport const clearMessages = () => dispatch => {\r\n    dispatch({\r\n        type : CLEAR_MESSAGE,\r\n        payload : {}\r\n    })\r\n}\r\n\r\nexport const clearShortUrl = () => dispatch => {\r\n    dispatch({\r\n        type : CLEAR_SHORT_URL,\r\n        payload : {}\r\n    })\r\n}","import React, {Component} from \"react\";\r\nimport { Container, Form, Table, FormLabel, FormControl, FormGroup, Button, Row, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faBan, faCopy } from '@fortawesome/free-solid-svg-icons';\r\nimport { clearErrors, clearMessages, clearShortUrl } from \"../actions/clearStateAction\";\r\nimport {shortenAnonymousUser} from \"../actions/urlActions\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './_LandingPage.css';\r\nimport './_global.css';\r\n\r\nclass LandingPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          url : \"\",\r\n          shortUrl : \"\",\r\n          errors : {},\r\n          message : {}\r\n        }\r\n\r\n        this.shortUrl = React.createRef();\r\n    }\r\n\r\n   componentDidMount(){\r\n     if(this.props.auth.isAuthenticated){\r\n      this.props.history.push(\"/dashboard\");\r\n     }\r\n   }\r\n\r\n   componentWillReceiveProps(nextProps){\r\n     if(nextProps.message){\r\n       this.setState({message : nextProps.message});\r\n     }\r\n     if(nextProps.errors){\r\n       this.setState({errors : nextProps.errors, message : {}})\r\n     }\r\n     this.setState({shortUrl : nextProps.urlData.shortUrl})\r\n   }\r\n\r\n   componentWillUnmount(){\r\n    this.props.clearErrors();\r\n    this.props.clearMessages();\r\n    this.props.clearShortUrl();\r\n   }\r\n\r\n   onChange = event => {\r\n    this.setState({[event.target.name] : event.target.value})\r\n  }\r\n\r\n  onSubmit = event => {\r\n      event.preventDefault();\r\n      this.props.clearErrors();\r\n      this.props.clearMessages();\r\n      this.props.clearShortUrl();\r\n      //console.log(this.state.url)\r\n      this.props.shortenAnonymousUser({url : this.state.url})\r\n      this.setState({url : \"\"})\r\n  }  \r\n\r\n  onCopy = () => {\r\n    //console.log(this.shortUrl.current.value);\r\n    //alert(\"Copied the text: \" + this.shortUrl.current.value);\r\n    //this.shortUrl.current.select();\r\n    //document.execCommand('copy');\r\n    navigator.clipboard.writeText(this.shortUrl.current.value);\r\n    //event.target.focus();\r\n    //alert(\"Copied the text: \" + this.shortUrl.current);\r\n  }\r\n\r\n  render(){\r\n    const {shortUrl, errors, message} = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n        {errors.error && \r\n          <div className=\"margin-top-20 alert alert-danger\" role=\"alert\">\r\n            {errors.error}\r\n        </div>\r\n        }\r\n        {message.success && \r\n          <div className=\"margin-top-20 alert alert-success\" role=\"alert\">\r\n            {message.success}\r\n        </div>\r\n        }\r\n          <Form className=\"margin-top-50\" onSubmit={this.onSubmit} >\r\n            <FormGroup controlId=\"\">\r\n              <FormLabel>Shorten URL</FormLabel>\r\n              <FormControl type=\"text\" placeholder=\"Enter URL\" name=\"url\" value={this.state.url} onChange={this.onChange} />\r\n              <Form.Text>\r\n                This short URL will be valid only for one month, If you want\r\n                short URL for long time then just sign in\r\n              </Form.Text>\r\n            </FormGroup>\r\n            <Button type=\"submit\"> Shorten </Button>\r\n          </Form>\r\n\r\n          {shortUrl && \r\n          <div className=\"margin-top-50\">\r\n            <Row>\r\n                <Col md={{ span: 10, offset: 1 }}>\r\n                <form className=\"form-inline\">\r\n                  <Form.Label className=\"left-right-margin col-md\">short url </Form.Label>\r\n                  <input\r\n                    className=\"form-control left-right-margin text-align-center col-md\"\r\n                    ref={this.shortUrl}\r\n                    value={\"https://kut-ty.herokuapp.com/\"+shortUrl}\r\n                    disabled\r\n                  />\r\n                  <Button onClick={() => this.onCopy()} className=\"left-right-margin light col-md\">\r\n                    <FontAwesomeIcon className=\"copy-grey\" icon={faCopy}/><span className=\"text-dark\"> Copy link</span>\r\n                  </Button>\r\n                </form>\r\n                </Col>\r\n            </Row>\r\n          </div>}\r\n\r\n          <h4 className=\"margin-top-50\">Services we offer for our users</h4>\r\n          <Table className=\"margin-top-20 margin-bottom-20\" striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Services</th>\r\n                <th>Anonymous members</th>\r\n                <th>Our members</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>URL expiration</td>\r\n                <td>1 month</td>\r\n                <td>User defined</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Custom URLs</td>\r\n                <td>\r\n                  <FontAwesomeIcon className=\"ban-red\" icon={faBan} />\r\n                </td>\r\n                <td>\r\n                  <FontAwesomeIcon className=\"check-green\" icon={faCheck} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>URL shortening APIs</td>\r\n                <td>\r\n                  <FontAwesomeIcon className=\"ban-red\" icon={faBan} />\r\n                </td>\r\n                <td>\r\n                  <FontAwesomeIcon className=\"check-green\" icon={faCheck} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>URL management</td>\r\n                <td>\r\n                  <FontAwesomeIcon className=\"ban-red\" icon={faBan} />\r\n                </td>\r\n                <td>\r\n                  <FontAwesomeIcon className=\"check-green\" icon={faCheck} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLandingPage.propTypes = {\r\n  auth : PropTypes.object.isRequired,\r\n  clearErrors : PropTypes.func.isRequired, \r\n  clearMessages : PropTypes.func.isRequired,\r\n  clearShortUrl : PropTypes.func.isRequired,\r\n  shortenAnonymousUser : PropTypes.func.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  message : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth : state.auth,\r\n  urlData : state.url,\r\n  errors : state.errors,\r\n  message : state.message\r\n})\r\n\r\nexport default connect( mapStateToProps, {clearErrors, clearMessages, clearShortUrl, shortenAnonymousUser}) (LandingPage);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_URLS_LIST,\r\n  GET_SHORT_URL,\r\n  GET_MESSAGE,\r\n  ADD_TO_URL_LIST,\r\n  DELETE_SHORT_URL\r\n} from \"./types\";\r\n\r\nexport const shortenAnonymousUser = url => dispatch => {\r\n  axios\r\n    .post(`https://kut-ty.herokuapp.com/url/anonymousShorten/`, url)\r\n    .then(res => {\r\n      console.log(res.data)\r\n     \r\n      dispatch({\r\n        type: GET_SHORT_URL,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: { success: res.data.success }\r\n      });\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      //console.log(err.response)\r\n    });\r\n}\r\n\r\nexport const shortenUrl = url => dispatch => {\r\n  axios\r\n    .post(`https://kut-ty.herokuapp.com/url/`, url)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_SHORT_URL,\r\n        payload: res.data\r\n      });\r\n      //console.log(res.data)\r\n      if (res.data.updateList) {\r\n        dispatch({\r\n          type: ADD_TO_URL_LIST,\r\n          payload: res.data.url\r\n        });\r\n      }\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: { success: res.data.success }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      if (err.response.status === 401) {\r\n        window.location.href = \"/signin\";\r\n      } else {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      }\r\n      //console.log(err.response)\r\n    });\r\n\r\n  /*try{\r\n        const res = await axios.post(`http://localhost:5000/url/${id}`, url);\r\n        dispatch({\r\n            type : GET_SHORT_URL,\r\n            payload : res.data.url\r\n        })\r\n//        console.log(res.data);\r\n            dispatch({\r\n                type : GET_MESSAGE,\r\n                payload : { success : \"Url shortened successfully\"}\r\n            })\r\n           await getUrlList(id);\r\n    }catch(err){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }*/\r\n};\r\n\r\nexport const getUrlList = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`https://kut-ty.herokuapp.com/url/urls/`);\r\n    dispatch({\r\n      type: GET_URLS_LIST,\r\n      payload: res.data\r\n    });\r\n    //console.log(res.data);\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n     window.location.href = \"/signin\";\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteUrl = url => async dispatch => {\r\n  if (window.confirm(`Do you want to delete this url (${url.url})?`)) {\r\n    try {\r\n      //console.log(url)\r\n      //const res = await axios.delete(`http://localhost:5000/url/${id}`, url);\r\n      const res = await axios({\r\n        method: \"DELETE\",\r\n        url: `https://kut-ty.herokuapp.com/url/`,\r\n        data: {\r\n          url: url.url\r\n        }\r\n      });\r\n      dispatch({\r\n        type: DELETE_SHORT_URL,\r\n        payload: res.data.url\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: { success: res.data.success }\r\n      });\r\n    } catch (err) {\r\n      if (err.response.status === 401) {\r\n        window.location.href = \"/signin\";\r\n      } else {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n    if(token){\r\n        //Apply auth header to all reqs\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }else{\r\n        //Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, GET_MESSAGE } from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createUser = (newUser, history) => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.post(\"https://kut-ty.herokuapp.com/user/register\", newUser);\r\n        history.push(\"/signin\");\r\n        dispatch({\r\n            type : GET_MESSAGE,\r\n            payload : res.data\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const loginUser = (loginCreds, history) => async dispatch => {\r\n\r\n    try{    \r\n        const res = await axios.post(\"https://kut-ty.herokuapp.com/user/login\", loginCreds);\r\n\r\n        const token = res.data.token;\r\n        //save to local storage\r\n        localStorage.setItem('jwtToken', token);\r\n        //set token to auth header\r\n        setAuthToken(token);\r\n        //Decode token\r\n        const decoded = jwt_decode(token);\r\n        //set current user\r\n        dispatch(setCurrentUser(decoded));\r\n    }catch(err){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//Set logged in user \r\nexport const setCurrentUser = decoded => {\r\n    return({\r\n        type : SET_CURRENT_USER,\r\n        payload : decoded\r\n    })\r\n}\r\n\r\n//Logout\r\nexport const logout = () => dispatch => {\r\n    //Remove token\r\n    localStorage.removeItem(\"jwtToken\");\r\n    //Remove auth header\r\n    setAuthToken(false);\r\n    //Set current user to {} to set isAuthenticated to false\r\n    dispatch(setCurrentUser({}))\r\n}","import React, { Component } from 'react'\r\nimport { Nav, NavDropdown, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/securityActions\";\r\n\r\nimport './_Header.css';\r\nimport './_global.css';\r\n\r\nclass Header extends Component {\r\n  \r\n    onLogoutClick = () => {\r\n      this.props.logout();\r\n    }\r\n\r\n    render() {\r\n\r\n      const {isAuthenticated, user} = this.props.auth;\r\n\r\n      const authLinks = (\r\n        <React.Fragment>\r\n          <Nav className=\"mr-auto\">\r\n                  <Link className=\"nav-link nav-text-light\" to=\"/dashboard\">Dashboard</Link>\r\n                </Nav>\r\n                <Nav>\r\n      <Link className=\"nav-link nav-text-light\" to=\"/user\"><FontAwesomeIcon icon={faUserCircle}/> {user.username}</Link>\r\n                  <a className=\"nav-link nav-text-light\" onClick={this.onLogoutClick}>Log out</a>\r\n                </Nav>\r\n        </React.Fragment>\r\n      )\r\n\r\n      const guestLinks = (\r\n        <React.Fragment>\r\n           <Nav className=\"mr-auto\"></Nav>\r\n           <Nav>\r\n        <Link className=\"nav-link nav-text-light\" to=\"/register\">Register</Link>\r\n        <Link className=\"nav-link nav-text-light\" to=\"/signin\">Sign in</Link>  \r\n        </Nav>\r\n        </React.Fragment>        \r\n        )\r\n\r\n        return (\r\n          <div>\r\n            <Navbar className=\"navbar-primary-color\" collapseOnSelect expand=\"sm\" variant=\"dark\">\r\n              <Link to='/'>\r\n               <Navbar.Brand className=\"nav-text-light\">Kut-ty</Navbar.Brand>\r\n              </Link>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                {isAuthenticated ? authLinks : guestLinks}\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout : PropTypes.func.isRequired,\r\n  auth : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth : state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout}) (Header);\r\n","import React, { Component } from 'react'\r\nimport { Container, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { loginUser } from \"../actions/securityActions\";\r\nimport classnames from \"classnames\";\r\nimport { clearErrors, clearMessages, clearShortUrl } from \"../actions/clearStateAction\";\r\n\r\n\r\nimport './_LandingPage.css';\r\nimport './_global.css';\r\n\r\nclass Signin extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       email : \"\",\r\n       password : \"\",\r\n       errors : {},\r\n       message : {}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.auth.isAuthenticated){\r\n      this.props.history.push(\"/dashboard\");\r\n     }\r\n     if(this.props.message){\r\n       this.state.message = this.props.message\r\n     }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.clearErrors();\r\n    this.props.clearMessages();\r\n    this.props.clearShortUrl();\r\n   }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.auth.isAuthenticated){\r\n      this.props.history.push('/dashboard');\r\n    }\r\n\r\n    if(nextProps.message){\r\n      this.state.message = nextProps.message\r\n    }\r\n\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors, message : {}})\r\n    }\r\n  }\r\n  \r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const userCreds = {\r\n      email : this.state.email,\r\n      password : this.state.password\r\n    }\r\n\r\n    this.props.loginUser(userCreds);\r\n\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({[event.target.name] : event.target.value});\r\n  }\r\n\r\n    render() {\r\n      const {errors, message} = this.state;\r\n        return (\r\n          <Container>\r\n            {errors.error && \r\n          <div className=\"margin-top-20 alert alert-danger\" role=\"alert\">\r\n            {errors.error}\r\n        </div>\r\n        }\r\n        {message.success && \r\n          <div className=\"margin-top-20 alert alert-success\" role=\"alert\">\r\n            {message.success}\r\n        </div>\r\n        }\r\n            <Row>\r\n              <Col md={{ span: 6, offset: 3 }}>\r\n              <Form className=\"margin-top-50\" onSubmit={this.onSubmit}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                   className={classnames(\"\",{\r\n                    \"is-invalid\" : errors.email\r\n                  })}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  onChange={this.onChange}\r\n                  value = {this.state.email}\r\n                />\r\n                {errors.email && (\r\n                  <div className=\"invalid-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                 className={classnames(\"\",{\r\n                  \"is-invalid\" : errors.password\r\n                })}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={this.onChange}\r\n                  value = {this.state.password}\r\n                />\r\n                {errors.password && (\r\n                  <div className=\"invalid-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nSignin.propTypes = {\r\n  auth : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  loginUser : PropTypes.func.isRequired,\r\n  clearErrors : PropTypes.func.isRequired, \r\n  clearMessages : PropTypes.func.isRequired,\r\n  clearShortUrl : PropTypes.func.isRequired,\r\n  message : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth : state.auth,\r\n  errors : state.errors,\r\n  message : state.message\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginUser, clearErrors, clearMessages, clearShortUrl}) (Signin);\r\n","import React, { Component } from 'react'\r\nimport { Container, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { createUser } from \"../actions/securityActions\";\r\nimport { clearErrors, clearMessages, clearShortUrl } from \"../actions/clearStateAction\";\r\n\r\nimport './_LandingPage.css';\r\nimport './_global.css';\r\n\r\nclass Register extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       username : \"\",\r\n       email : \"\",\r\n       password : \"\",\r\n       confirmPassword : \"\", \r\n       errors : {}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.auth.isAuthenticated){\r\n      this.props.history.push(\"/dashboard\");\r\n     }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.clearErrors();\r\n    //this.props.clearMessages();\r\n    this.props.clearShortUrl();\r\n   }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors});\r\n    }\r\n  } \r\n\r\n  onChange = event => {\r\n    this.setState({[event.target.name] : event.target.value})\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newUser = {\r\n      username : this.state.username,\r\n       email : this.state.email,\r\n       password : this.state.password,\r\n       confirmPassword : this.state.confirmPassword, \r\n    }\r\n\r\n    console.log(newUser)\r\n\r\n    this.props.createUser(newUser, this.props.history);\r\n\r\n  }\r\n\r\n    render() {\r\n\r\n      const {errors} = this.state;\r\n\r\n        return (\r\n          <Container>\r\n            <Row>\r\n              <Col md={{ span: 6, offset: 3 }}>\r\n              <Form className=\"margin-top-50\" onSubmit={this.onSubmit}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className={classnames(\"\",{\r\n                    \"is-invalid\" : errors.username\r\n                  })}\r\n                  placeholder=\"Enter username\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.username && (\r\n                  <div className=\"invalid-feedback\">{errors.username}</div>\r\n                )}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  className={classnames(\"\",{\r\n                    \"is-invalid\" : errors.email\r\n                  })}\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.email && (\r\n                  <div className=\"invalid-feedback\">{errors.email}</div>\r\n                )}\r\n                </Form.Group>\r\n              \r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  className={classnames(\"\",{\r\n                    \"is-invalid\" : errors.password\r\n                  })}\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.password && (\r\n                  <div className=\"invalid-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  className={classnames(\"\",{\r\n                    \"is-invalid\" : errors.confirmPassword\r\n                  })}\r\n                  placeholder=\"Confirmation password\"\r\n                  name=\"confirmPassword\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Text className=\"text-dark\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              <Button className=\"margin-top-20\" variant=\"primary\" type=\"submit\">\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  createUser : PropTypes.func.isRequired,\r\n  auth : PropTypes.object.isRequired,\r\n  clearErrors : PropTypes.func.isRequired, \r\n  clearMessages : PropTypes.func.isRequired,\r\n  clearShortUrl : PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors : state.errors,\r\n  auth : state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps ,{createUser, clearErrors, clearMessages, clearShortUrl})(Register);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Table,\r\n  FormLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Card\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from 'prop-types';\r\nimport { deleteUrl } from \"../actions/urlActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./_global.css\";\r\n\r\nclass UrlDetailComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  handleDelete = () => {\r\n      \r\n      const data = { url : this.props.urlData.original_url}\r\n      this.props.deleteUrl(data);\r\n      this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      original_url,\r\n      shortened_url,\r\n      no_of_redirections,\r\n      creation_time,\r\n      expiration_time\r\n    } = this.props.urlData;\r\n    // console.log(this.props)\r\n    return (\r\n      <React.Fragment>\r\n        <Card border=\"info\">\r\n          <Card.Body>\r\n            <Row>\r\n              <Col sm={5}>\r\n                <code className=\"text-dark\">{original_url}</code>\r\n              </Col>\r\n              <Col sm={5}>\r\n                Short Url: <code>https://kut-ty.herokuapp.com/{shortened_url}</code>\r\n              </Col>\r\n              <Col sm={2}>\r\n                <Button onClick={this.handleShow}>\r\n                  <FontAwesomeIcon icon={faEdit} />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n        <br />\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{original_url}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Container fluid={true}>\r\n              <Form>\r\n              <Form.Group as={Row}>\r\n                <Form.Label>Short Url</Form.Label>\r\n                <Col>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    disabled\r\n                    defaultValue={\"https://kut-ty.herokuapp.com/\"+shortened_url}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row}>\r\n                <Form.Label>No. of redirection</Form.Label>\r\n                <Col>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    disabled\r\n                    defaultValue={no_of_redirections}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row}>\r\n                <Form.Label>Creation time</Form.Label>\r\n                <Col>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    disabled\r\n                    value={new Date(creation_time)}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row}>\r\n                <Form.Label>Expiration time</Form.Label>\r\n                <Col>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    disabled\r\n                    value={new Date(expiration_time)}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form>\r\n              </Container>\r\n            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"bg-danger btn-danger\" variant=\"danger\" onClick={this.handleDelete}>\r\n              Delete Url\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nUrlDetailComponent.propTypes = {\r\n    deleteUrl : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteUrl}) (UrlDetailComponent);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Table,\r\n  FormLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Accordion,\r\n  Card\r\n} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faBan, faCopy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { shortenUrl, getUrlList } from \"../actions/urlActions\";\r\nimport { clearErrors, clearMessages, clearShortUrl } from \"../actions/clearStateAction\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./_Dashboard.css\";\r\nimport \"./_global.css\";\r\nimport UrlDetailComponent from \"./UrlDetailComponent\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          url : \"\",\r\n          shortUrl : \"\",\r\n          urls : [],\r\n          errors : {},\r\n          message : {}\r\n        }\r\n\r\n        this.shortUrl = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.props.getUrlList();\r\n    }\r\n\r\n   componentWillReceiveProps(nextProps){\r\n\r\n      if(nextProps.errors){\r\n        this.setState({errors : nextProps.errors})\r\n      }\r\n\r\n      if(nextProps.message){\r\n        this.setState({message : nextProps.message})\r\n      }\r\n\r\n      const {urlList, shortUrl} = nextProps.urlData\r\n      this.setState({shortUrl, urls : urlList});\r\n   }\r\n\r\n   componentWillUnmount(){\r\n     this.props.clearErrors();\r\n     this.props.clearMessages();\r\n     this.props.clearShortUrl();\r\n   }\r\n\r\n  onSubmit = event => {\r\n      event.preventDefault();\r\n      this.props.clearErrors();\r\n      this.props.clearMessages();\r\n      this.props.clearShortUrl();\r\n      this.props.shortenUrl({url : this.state.url})\r\n      this.props.getUrlList();\r\n  }  \r\n\r\n  onChange = event => {\r\n    this.setState({[event.target.name] : event.target.value})\r\n  }\r\n\r\n  onCopy = () => {\r\n    console.log(this.shortUrl.current.value);\r\n    //alert(\"Copied the text: \" + this.shortUrl.current.value);\r\n    //this.shortUrl.current.select();\r\n    //document.execCommand('copy');\r\n    navigator.clipboard.writeText(this.shortUrl.current.value);\r\n    //event.target.focus();\r\n    //alert(\"Copied the text: \" + this.shortUrl.current);\r\n  }\r\n\r\n  render() {\r\n    const {shortUrl, errors, message, urls} = this.state;\r\n\r\n    const shortenedUrlsList = () => {\r\n      const shortUrls = urls.filter(url => !url.is_api);\r\n      //console.log(shortUrls);\r\n      //console.log(\"lens \"+ shortUrls.length);\r\n      if(shortUrls.length === 0){\r\n        return (\r\n          <div className=\"alert alert-success\" role=\"alert\">\r\n            You have no shortened URLs\r\n          </div>\r\n        )\r\n      }else{\r\n        return (shortUrls.map(urlData => (\r\n          <UrlDetailComponent key={urlData._id} urlData={urlData}/>\r\n        )))\r\n      }\r\n    } \r\n\r\n\r\n    const apiUrlsList = () => {\r\n      const apiUrls = urls.filter(url => url.is_api);\r\n      //console.log(apiUrls)\r\n      //console.log(\"len \"+apiUrls.length)\r\n      if(apiUrls.length === 0){\r\n        return (\r\n          <div className=\"alert alert-success\" role=\"alert\">\r\n            You have no shortened URLs created with API\r\n          </div>\r\n        )\r\n      }else{\r\n        return (apiUrls.map(urlData => (\r\n          <UrlDetailComponent key={urlData._id} urlData={urlData}/>\r\n        )))\r\n      }\r\n    } \r\n  \r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n        {errors.error && \r\n          <div className=\"margin-top-20 alert alert-danger\" role=\"alert\">\r\n            {errors.error}\r\n        </div>\r\n        }\r\n        {message.success && \r\n          <div className=\"margin-top-20 alert alert-success\" role=\"alert\">\r\n            {message.success}\r\n        </div>\r\n        }\r\n          <Form className=\"margin-top-50\" onSubmit={this.onSubmit}>\r\n            <FormGroup controlId=\"\">\r\n              <FormLabel>Shorten URL</FormLabel>\r\n              <FormControl type=\"text\" placeholder=\"Enter URL\" name=\"url\" value={this.state.url} onChange={this.onChange} />\r\n              <Form.Text>\r\n                This short URL will be valid only for one month, If you want\r\n                short URL for long time then just sign in\r\n              </Form.Text>\r\n            </FormGroup>\r\n            <Button type=\"submit\"> Shorten </Button>\r\n          </Form>\r\n\r\n          {shortUrl &&\r\n          <div className=\"margin-top-50\">\r\n          <Row>\r\n            <Col md={{ span: 10, offset: 1 }}>\r\n              <form className=\"form-inline\">\r\n                <Form.Label className=\"left-right-margin col-md\">\r\n                  short url\r\n                </Form.Label>\r\n                <input\r\n                  className=\"form-control left-right-margin text-align-center col-md\"\r\n                  ref={this.shortUrl}\r\n                  value={\"https://kut-ty.herokuapp.com/\"+shortUrl}\r\n                  disabled\r\n                />\r\n                <Button\r\n                  onClick={() => this.onCopy()}\r\n                  className=\"left-right-margin light col-md\"\r\n                >\r\n                  <FontAwesomeIcon className=\"copy-grey\" icon={faCopy} />\r\n                  <span className=\"text-dark\"> Copy link</span>\r\n                </Button>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n          }\r\n        </Container>\r\n\r\n        <Container fluid={true} className=\"margin-top-50\">\r\n          <h4>Manage URLs</h4>\r\n          <Accordion>\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle className=\"text-dark-hover\" as={Link} variant=\"link\" eventKey=\"0\">\r\n                  URLs shortened\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  {shortenedUrlsList()}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle className=\"text-dark-hover\" as={Link} variant=\"link\" eventKey=\"1\">\r\n                  URLs shortened with API\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"1\">\r\n                <Card.Body>\r\n                  {apiUrlsList()}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  shortenUrl : PropTypes.func.isRequired,\r\n  urlData : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  message : PropTypes.object.isRequired,\r\n  clearErrors : PropTypes.func.isRequired,\r\n  clearMessages : PropTypes.func.isRequired,\r\n  clearShortUrl : PropTypes.func.isRequired, \r\n  getUrlList : PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  urlData : state.url,\r\n  errors : state.errors,\r\n  message : state.message   \r\n})\r\n\r\nexport default connect(mapStateToProps,{shortenUrl, clearErrors, clearMessages, clearShortUrl, getUrlList}) (Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Table,\r\n  FormLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faBan, faCopy, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getUserProfileDetails, updateUsername, updateEmail, updatePassword, enableAPIService } from \"../actions/profileActions\";\r\nimport { clearErrors, clearMessages } from \"../actions/clearStateAction\";\r\n\r\nimport \"./_UserManagement.css\";\r\nimport \"./_global.css\";\r\n\r\nclass UserManagement extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       show : false,\r\n       changePassword : false,\r\n       modalText : \"\",\r\n       modalValue : \"\",\r\n       modalInputName : \"\",\r\n       usernameToChange : \"\",\r\n       emailToChange : \"\",\r\n       passwordToChange : \"\",\r\n       confirmPassword : \"\",\r\n       username : \"\",\r\n       email : \"\",\r\n       noOfLinksShortened : 0,\r\n       noOfActiveLinks : 0,\r\n       noOfLinksCreatedWithAPI : 0,\r\n       totalNumberOfRedirections : 0,\r\n       hasApi : false,\r\n       apiKey : \"\",\r\n       errors : {},\r\n       message : {}\r\n    }\r\n\r\n    this.apilink = React.createRef();\r\n  }\r\n  \r\n  componentDidMount(){\r\n\r\n    this.props.getUserProfileDetails();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors});\r\n      //console.log(this.state.errors)\r\n    }\r\n\r\n    if(nextProps.message !== Object){\r\n      //const message = {success : nextProps.message}\r\n      //console.log(message)\r\n      this.setState({message : nextProps.message});\r\n    }\r\n\r\n    const {\r\n      username,\r\n      email,\r\n      noOfLinksShortened,\r\n      noOfActiveLinks,\r\n      noOfLinksCreatedWithAPI,\r\n      totalNumberOfRedirections,\r\n      hasApi,\r\n      apiKey\r\n    } = nextProps.userDetails;\r\n    //console.log(nextProps.userDetails);\r\n    this.setState({\r\n      username,\r\n      email,\r\n      noOfLinksShortened,\r\n      noOfActiveLinks,\r\n      noOfLinksCreatedWithAPI,\r\n      totalNumberOfRedirections,\r\n      hasApi,\r\n      apiKey\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n\r\n    this.props.clearErrors();\r\n    this.props.clearMessages();\r\n\r\n  }\r\n\r\n  handleClose = () =>{ \r\n    this.setState({\r\n      show: false,\r\n      modalValue: \"\",\r\n      changePassword: false,\r\n      modalText: \"\",\r\n      modalInputName: \"\",\r\n      confirmPassword: \"\",\r\n      passwordToChange: \"\",\r\n      usernameToChange: \"\",\r\n      emailToChange: \"\"\r\n    });\r\n  };\r\n  \r\n  handleShow = (text, name) =>{\r\n     this.setState({show : true, modalText : text, modalInputName : name})\r\n     if(text === \"password\")\r\n      this.setState({changePassword : true})\r\n  };\r\n\r\n  onChange = (event) => {\r\n    console.log(event.target.name)\r\n    if(event.target.name ===  \"confirmPassword\"){\r\n      this.setState({ [event.target.name] : event.target.value});\r\n    }else{\r\n      this.setState({ [event.target.name] : event.target.value, modalValue : event.target.value })\r\n    }\r\n  }\r\n\r\n  enableApi = () => {\r\n    this.props.enableAPIService();\r\n  }\r\n\r\n  updateDetail = (inputType) => {\r\n    console.log(this.state.email)\r\n    if(inputType === \"username\"){\r\n      const data = {newUsername : this.state.usernameToChange}\r\n      this.props.updateUsername(data);\r\n    }else if(inputType === \"email\"){\r\n      const data = {newEmail : this.state.emailToChange}\r\n      this.props.updateEmail(data);\r\n    }else if(inputType === \"password\"){\r\n      const data = {newPassword : this.state.passwordToChange, confirmPassword : this.state.confirmPassword}\r\n      this.props.updatePassword(data);\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n   onCopy = () => {\r\n    //console.log(this.shortUrl.current.value);\r\n    //alert(\"Copied the text: \" + this.shortUrl.current.value);\r\n    //this.shortUrl.current.select();\r\n    //document.execCommand('copy');\r\n    navigator.clipboard.writeText(this.apilink.current.value);\r\n    //event.target.focus();\r\n    //alert(\"Copied the text: \" + this.shortUrl.current);\r\n  }\r\n\r\n  render() {\r\n    const {errors, hasApi, message} = this.state;\r\n    return (\r\n      <Container fluid={true}>\r\n        {errors.error && \r\n          <div className=\"margin-top-20 alert alert-danger\" role=\"alert\">\r\n            {errors.error}\r\n        </div>\r\n        }\r\n        {message.success && \r\n          <div className=\"margin-top-20 alert alert-success\" role=\"alert\">\r\n            {message.success}\r\n        </div>\r\n        }\r\n\r\n        <h2 className=\"margin-top-50\">Profile</h2>\r\n\r\n     \r\n        <Row className=\"margin-top-20\">\r\n          <Col className=\"text-right-align\">Username : </Col>\r\n          <Col>{this.state.username}</Col>\r\n          <Col><Button onClick={() => this.handleShow(\"username\", \"usernameToChange\")}><FontAwesomeIcon icon={faEdit}/>Edit</Button></Col>\r\n        </Row>\r\n        <Row  className=\"margin-top-20\">\r\n          <Col className=\"text-right-align\">Email :</Col>\r\n          <Col>{this.state.email}</Col>\r\n          <Col><Button onClick={() => this.handleShow(\"email\", \"emailToChange\")}><FontAwesomeIcon icon={faEdit}/> Edit</Button></Col>\r\n        </Row>\r\n        <Row  className=\"margin-top-20\">\r\n          <Col className=\"text-right-align\">No. of links shortened :</Col>\r\n          <Col>{this.state.noOfLinksShortened}</Col>\r\n          <Col></Col>\r\n        </Row>\r\n        <Row  className=\"margin-top-10\">\r\n          <Col className=\"text-right-align\">No. of active links :</Col>\r\n          <Col>{this.state.noOfActiveLinks}</Col>\r\n          <Col></Col>\r\n        </Row>\r\n        {hasApi &&\r\n        <Row  className=\"margin-top-10\">\r\n        <Col className=\"text-right-align\">No. of links created with api :</Col>\r\n        <Col>{this.state.noOfLinksCreatedWithAPI}</Col>\r\n        <Col></Col>\r\n      </Row>\r\n        }\r\n        <Row  className=\"margin-top-10\">\r\n          <Col className=\"text-right-align\">Total No. of redirections :</Col>\r\n          <Col>{this.state.totalNumberOfRedirections}</Col>\r\n          <Col></Col>\r\n        </Row>\r\n\r\n        {!hasApi &&\r\n        <Button className=\"margin-top-50\" onClick={this.enableApi}>Enable an API service</Button>\r\n        }\r\n        <br/>\r\n        <Button className=\"margin-top-20 bg-danger btn-danger\" onClick={() => this.handleShow(\"password\", \"passwordToChange\")}>Change Password</Button>\r\n\r\n        {hasApi &&\r\n        <React.Fragment>\r\n        <br/>\r\n        \r\n      <form className=\"margin-top-20 form-inline\">\r\n                  <Form.Label className=\"left-right-margin col-md\">Your API Link</Form.Label>\r\n                  <input\r\n                    className=\"form-control left-right-margin text-align-center col-md\"\r\n                    ref={this.apilink}\r\n                    value={\"https://kut-ty.herokuapp.com/api/\" + this.state.apiKey}\r\n                    disabled\r\n                  />\r\n                  <Button onClick={() => this.onCopy()} className=\"left-right-margin light col-md\">\r\n                    <FontAwesomeIcon className=\"copy-grey\" icon={faCopy}/><span className=\"text-dark\"> Copy link</span>\r\n                  </Button>\r\n                </form>\r\n                <div className=\"margin-top-10\">json body sholud contain<br/>\r\n                <code>\r\n                {\r\n                  '\"url\"' + `:` + '\"https://www.example.com\"'\r\n                 }  \r\n                </code>\r\n                </div>\r\n      </React.Fragment>\r\n        }\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose} centered>\r\n        <Modal.Header closeButton>\r\n    <Modal.Title>Change {this.state.modalText}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>Enter new {this.state.modalText}</Form.Label>\r\n            <Form.Control type={(this.state.changePassword?\"password\":\"text\")} name={this.state.modalInputName} value={this.state.modalValue} onChange={this.onChange} />\r\n            { this.state.changePassword &&\r\n              <React.Fragment>\r\n              <Form.Label>Enter confirmation password</Form.Label>\r\n              <Form.Control type=\"password\" name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onChange} />\r\n              </React.Fragment>\r\n            }\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"primary\"  onClick={() => this.updateDetail(this.state.modalText)}>\r\n            Update\r\n          </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nUserManagement.propTypes = {\r\n  getUserProfileDetails : PropTypes.func.isRequired,\r\n  userDetails : PropTypes.object.isRequired,\r\n  updateUsername : PropTypes.func.isRequired,\r\n  updateEmail : PropTypes.func.isRequired,\r\n  updatePassword : PropTypes.func.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  clearErrors : PropTypes.func.isRequired,\r\n  clearMessages : PropTypes.func.isRequired,\r\n  enableAPIService : PropTypes.func.isRequired,\r\n  message : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userDetails : state.userDetails,\r\n  errors : state.errors,\r\n  message : state.message \r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserProfileDetails,\r\n  updateUsername,\r\n  updateEmail,\r\n  updatePassword,\r\n  clearErrors,\r\n  clearMessages,\r\n  enableAPIService\r\n})(UserManagement);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_USER_DETAILS,\r\n  GET_ERRORS,\r\n  GET_USERNAME,\r\n  GET_EMAIL,\r\n  GET_MESSAGE,\r\n  GET_API_STATUS\r\n} from \"./types\";\r\n\r\nexport const getUserProfileDetails = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`https://kut-ty.herokuapp.com/user/`);\r\n    dispatch({\r\n      type: GET_USER_DETAILS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    //console.log(err)\r\n    if (err.response.status === 401) {\r\n      window.location.href = \"/signin\";\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateUsername = newUsername => async dispatch => {\r\n  try {\r\n    const res = await axios.put(\r\n      `https://kut-ty.herokuapp.com/user/changeUsername/`,\r\n      newUsername\r\n    );\r\n    //console.log(res);\r\n    dispatch({\r\n      type: GET_USERNAME,\r\n      payload: res.data\r\n    });\r\n    dispatch({\r\n      type: GET_MESSAGE,\r\n      payload: { success: \"Username updated successfully\" }\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n      window.location.href = \"/signin\";\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateEmail = newEmail => async dispatch => {\r\n  try {\r\n    const res = await axios.put(\r\n      `https://kut-ty.herokuapp.com/user/changeEmail/`,\r\n      newEmail\r\n    );\r\n    //console.log(res);\r\n    dispatch({\r\n      type: GET_EMAIL,\r\n      payload: res.data\r\n    });\r\n    dispatch({\r\n      type: GET_MESSAGE,\r\n      payload: { success: \"Email updated successfully\" }\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n      window.location.href = \"/signin\";\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const updatePassword = newPassword => async dispatch => {\r\n  try {\r\n    const res = await axios.put(\r\n      `https://kut-ty.herokuapp.com/user/changePassword/`,\r\n      newPassword\r\n    );\r\n    dispatch({\r\n      type: GET_MESSAGE,\r\n      payload: \"Password updated successfully\"\r\n    });\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n      window.location.href = \"/signin\";\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const enableAPIService = () => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`https://kut-ty.herokuapp.com/user/enableAPIService/`);\r\n    dispatch({\r\n      type: GET_MESSAGE,\r\n      payload: res.data\r\n    });\r\n    dispatch({\r\n      type: GET_API_STATUS,\r\n      payload: true\r\n    });\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n      window.location.href = \"/signin\";\r\n    } else {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport { Nav, NavDropdown, Navbar } from \"react-bootstrap\";\r\n\r\nimport './_Footer.css';\r\nimport './_global.css'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n               \r\n            <div className=\"footer\">\r\n              <div className=\"container\">\r\n                  <p className=\"text-muted\">&copy; Copyright 2019 kut.ty</p>\r\n              </div>\r\n            </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        case CLEAR_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_SHORT_URL, GET_URLS_LIST, CLEAR_SHORT_URL, ADD_TO_URL_LIST, DELETE_SHORT_URL } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    shortUrl : \"\",\r\n    urlList : []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SHORT_URL:\r\n            //if(!action.payload.url.notUpdateList)    \r\n            return {\r\n                ...state,\r\n                shortUrl : action.payload.url.shortened_url\r\n            };\r\n        case GET_URLS_LIST:\r\n            return {\r\n                ...state,\r\n                urlList : action.payload\r\n            };\r\n        case ADD_TO_URL_LIST:\r\n            state.urlList.push(action.payload)\r\n            return state;\r\n        case CLEAR_SHORT_URL:\r\n            return {\r\n                ...state,\r\n                shortUrl : action.payload\r\n            }\r\n        case DELETE_SHORT_URL:\r\n            return {\r\n                ...state,\r\n                urlList : state.urlList.filter(url => url.shortened_url !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_USER_DETAILS, GET_USERNAME, GET_EMAIL, GET_API_STATUS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, actions){\r\n    switch(actions.type){\r\n        case GET_USER_DETAILS:\r\n            return actions.payload;\r\n        case GET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username : actions.payload.username\r\n            };\r\n        case GET_EMAIL:\r\n            return {\r\n                ... state,\r\n                email : actions.payload.email\r\n            };\r\n        case GET_API_STATUS:\r\n            return{\r\n                ...state,\r\n                hasApi : actions.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_MESSAGE:\r\n            return action.payload;\r\n        case CLEAR_MESSAGE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    isAuthenticated : false,\r\n    user: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst isEmpty = (value) => {\r\n    return value === undefined || value === null || (typeof value === 'object' && Object.keys(value).length === 0) || (typeof value ===         'string' && value.trim().length === 0);\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport urlReducer from './urlReducer';\r\nimport profileReducer from './profileReducer';\r\nimport messageReducer from './messageReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n    errors : errorReducer,\r\n    url : urlReducer,\r\n    userDetails : profileReducer,\r\n    message : messageReducer,\r\n    auth : securityReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(    \r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    )\r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware)\r\n        )\r\n    )\r\n}\r\n\r\nexport default store;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, auth, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/signin\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    auth : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth : state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps) (SecuredRoute);","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport LandingPage from './component/LandingPage';\nimport Header from './component/Header';\nimport Signin from './component/Signin';\nimport Register from './component/Register';\nimport Dashboard from './component/Dashboard';\nimport UserManagement from './component/UserManagement';\nimport Footer from './component/Footer';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logout } from \"./actions/securityActions\";\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport SecuredRoute from './utils/SecuredRoute';\n\n//Check for token\nif(localStorage.jwtToken){\n  //set auth token\n  setAuthToken(localStorage.jwtToken);\n  //Decode token and get user data\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  //Check for expired token\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime){\n    //Logout user\n    store.dispatch(logout());\n    //Clear data\n    window.location.href = \"/signin\";\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n      <Router>\n        <Header/>\n        <Route exact path=\"/signin\" component={Signin}/>\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/\" component={LandingPage}/>\n\n        <Switch>\n          <SecuredRoute exact path=\"/dashboard\" component={Dashboard}/>\n          <SecuredRoute exact path=\"/user\" component={UserManagement}/>\n        </Switch>\n        <Footer/>\n      </Router>\n      </Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}